on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    container: golang:1.23

    services:
      order_service:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: order_service
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      loyalty_service:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: loyalty_service
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      sso_service:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sso_service
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: confluentinc/cp-zookeeper:7.4.0
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

      kafka:
        image: confluentinc/cp-kafka:7.4.0
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        options: >-
          --health-cmd "cub kafka-ready -b kafka:9092 1 20"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download autotests binaries
        uses: robinraju/release-downloader@v1.8
        with:
          repository: Yandex-Practicum/go-autotests
          latest: true
          fileName: "*"
          out-file-path: .tools
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup autotest binary
        run: |
          chmod -R +x $GITHUB_WORKSPACE/.tools
          mv $GITHUB_WORKSPACE/.tools/gophermarttest /usr/local/bin/gophermarttest
          mv $GITHUB_WORKSPACE/.tools/random /usr/local/bin/random

      - name: Prepare binaries
        run: |
          mkdir -p ./bin
          (cd order-service/cmd/gophermart && go build -buildvcs=false -o $GITHUB_WORKSPACE/bin/gophermart)
          (cd order-service/cmd/accrual && chmod +x accrual_linux_amd64 && cp accrual_linux_amd64 $GITHUB_WORKSPACE/bin/)
          (cd loyalty-service/cmd && go build -buildvcs=false -o $GITHUB_WORKSPACE/bin/loyalty)
          (cd sso-service/cmd && go build -buildvcs=false -o $GITHUB_WORKSPACE/bin/sso)

      - name: Install PostgreSQL client
        run: apt-get update && apt-get install -y postgresql-client

      - name: Init DB schema
        run: |
          PGPASSWORD=postgres psql -h order_service -U postgres -d order_service -f sql/migrations/init_order.sql
          PGPASSWORD=postgres psql -h loyalty_service -U postgres -d loyalty_service -f sql/migrations/init_loyalty.sql
          PGPASSWORD=postgres psql -h sso_service -U postgres -d sso_service -f sql/migrations/init_sso.sql

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for order_service..."
          until pg_isready -h order_service -p 5432 -U postgres; do sleep 1; done
          echo "Waiting for loyalty_service..."
          until pg_isready -h loyalty_service -p 5432 -U postgres; do sleep 1; done
          echo "Waiting for sso_service..."
          until pg_isready -h sso_service -p 5432 -U postgres; do sleep 1; done

      - name: Start loyalty-service
        env:
          ACCRUAL_DB_DSN: postgresql://postgres:postgres@order_service/order_service?sslmode=disable
        run: |
          ./bin/loyalty &
          sleep 5

      - name: Start sso-service
        env:
          SSO_DB_DSN: postgresql://postgres:postgres@sso_service/sso_service?sslmode=disable
        run: |
          ./bin/sso &
          sleep 5

      - name: Test
        env:
          DB_DSN: postgresql://postgres:postgres@order_service/order_service?sslmode=disable
        run: |
          echo "Using DB_DSN: $DB_DSN"
          gophermarttest \
            -test.v -test.run=^TestGophermart$ \
            -gophermart-binary-path=$GITHUB_WORKSPACE/bin/gophermart \
            -gophermart-host=localhost \
            -gophermart-port=8080 \
            -gophermart-database-uri="$DB_DSN" \
            -accrual-binary-path=$GITHUB_WORKSPACE/bin/accrual_linux_amd64 \
            -accrual-host=localhost \
            -accrual-port=$(random unused-port)
