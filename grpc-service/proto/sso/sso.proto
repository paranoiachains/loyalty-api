syntax = "proto3";

package auth;

option go_package = "github.com/paranoiachains/loyalty-api/grpc-service/gen/go/sso";

service Auth {
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc Login (LoginRequest) returns (LoginResponse);
}

service Withdrawals {
    rpc Balance (BalanceRequest) returns (BalanceResponse);
    rpc Withdraw (WithdrawRequest) returns (WithdrawResponse);
    rpc Withdrawals (WithdrawalsRequest) returns (WithdrawalsResponse);
}

message RegisterRequest {
    string login = 1;
    string password = 2;
}

message RegisterResponse {
    int64 user_id = 1;
}

message LoginRequest {
    string login = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
}

message BalanceRequest {
    int64 user_id = 1;
}

message BalanceResponse {
    double current = 1;
    double withdrawn = 2;
}

message WithdrawRequest {
    int64 order = 1;
    int64 user_id = 2;
    double sum = 3;
}

message WithdrawResponse {
}

message WithdrawalsRequest {
    int64 user_id = 1;
}

message Withdrawal {
    int64 order = 1;
    double sum = 2;
    string processed_at = 3; // дату и время лучше передавать как строку в RFC3339 формате
}

message WithdrawalsResponse {
    repeated Withdrawal withdrawals = 1;
}